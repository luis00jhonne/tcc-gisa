networks:
 kong-net:
  driver: bridge

version: '3'

services:
  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: postgres 
    links:
      - postgres
    depends_on:
      - postgres

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    restart: always
    networks:
      - kong-net
    environment:
      KONG_PG_HOST: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: postgres 
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://postgres@postgres:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      KONG_PG_HOST: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: postgres

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: postgres
      DB_USER: postgres
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - postgres
    ports:
      - "1337:1337"

  postgres:
    image: postgres:14.1-alpine
    container_name: database
    networks:
      - kong-net
    volumes:
      - gisa-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  prestadores:
    container_name: prestadores-service
    build: ./prestadores-service
    ports:
      - 8081:8080
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - DB_SERVER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  conveniados:
    container_name: conveniados-service
    build: ./conveniados-service
    ports:
      - 8082:8080
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - DB_SERVER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  associados:
    container_name: associados-service
    build: ./associados-service
    ports:
      - 8083:8080
    depends_on:
      - postgres
      - rabbitmq
    links:
      - postgres
      - rabbitmq
    environment:
      - DB_SERVER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - RABBITMQ_HOST=rabbitmq

  acessoaolegado:
    container_name: acessoaolegado-service
    build: ./acessoaolegado-service
    ports:
      - 8084:8080
    depends_on:
      - postgres
      - rabbitmq
    links:
      - postgres
      - rabbitmq
    environment:
      - DB_SERVER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - RABBITMQ_HOST=rabbitmq

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    
volumes:
  gisa-data: